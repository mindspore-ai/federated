# automatically generated by the FlatBuffers compiler, do not modify

# namespace: schema

import flatbuffers

class ResponseGetResult(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAsResponseGetResult(cls, buf, offset):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = ResponseGetResult()
        x.Init(buf, n + offset)
        return x

    # ResponseGetResult
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # ResponseGetResult
    def Retcode(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ResponseGetResult
    def Reason(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # ResponseGetResult
    def Iteration(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ResponseGetResult
    def Timestamp(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

def ResponseGetResultStart(builder): builder.StartObject(4)
def ResponseGetResultAddRetcode(builder, retcode): builder.PrependInt32Slot(0, retcode, 0)
def ResponseGetResultAddReason(builder, reason): builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(reason), 0)
def ResponseGetResultAddIteration(builder, iteration): builder.PrependInt32Slot(2, iteration, 0)
def ResponseGetResultAddTimestamp(builder, timestamp): builder.PrependUOffsetTRelativeSlot(3, flatbuffers.number_types.UOffsetTFlags.py_type(timestamp), 0)
def ResponseGetResultEnd(builder): return builder.EndObject()
