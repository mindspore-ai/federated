# automatically generated by the FlatBuffers compiler, do not modify

# namespace: schema

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class DSParams(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = DSParams()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsDSParams(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # DSParams
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # DSParams
    def SignK(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float32Flags, o + self._tab.Pos)
        return 0.0

    # DSParams
    def SignEps(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float32Flags, o + self._tab.Pos)
        return 0.0

    # DSParams
    def SignThrRatio(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float32Flags, o + self._tab.Pos)
        return 0.0

    # DSParams
    def SignGlobalLr(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float32Flags, o + self._tab.Pos)
        return 0.0

    # DSParams
    def SignDimOut(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # DSParams
    def SigndsREst(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float32Flags, o + self._tab.Pos)
        return 0.0

    # DSParams
    def SigndsIsReached(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

def Start(builder): builder.StartObject(5)
def DSParamsStart(builder):
    """This method is deprecated. Please switch to Start."""
    return Start(builder)
def AddSignK(builder, signK): builder.PrependFloat32Slot(0, signK, 0.0)
def DSParamsAddSignK(builder, signK):
    """This method is deprecated. Please switch to AddSignK."""
    return AddSignK(builder, signK)
def AddSignEps(builder, signEps): builder.PrependFloat32Slot(1, signEps, 0.0)
def DSParamsAddSignEps(builder, signEps):
    """This method is deprecated. Please switch to AddSignEps."""
    return AddSignEps(builder, signEps)
def AddSignThrRatio(builder, signThrRatio): builder.PrependFloat32Slot(2, signThrRatio, 0.0)
def DSParamsAddSignThrRatio(builder, signThrRatio):
    """This method is deprecated. Please switch to AddSignThrRatio."""
    return AddSignThrRatio(builder, signThrRatio)
def AddSignGlobalLr(builder, signGlobalLr): builder.PrependFloat32Slot(3, signGlobalLr, 0.0)
def DSParamsAddSignGlobalLr(builder, signGlobalLr):
    """This method is deprecated. Please switch to AddSignGlobalLr."""
    return AddSignGlobalLr(builder, signGlobalLr)
def AddSignDimOut(builder, signDimOut): builder.PrependInt32Slot(4, signDimOut, 0)
def DSParamsAddSignDimOut(builder, signDimOut):
    """This method is deprecated. Please switch to AddSignDimOut."""
    return AddSignDimOut(builder, signDimOut)
def DSParamsAddSigndsREst(builder, signdsREst): builder.PrependFloat32Slot(5, signdsREst, 0.0)
def DSParamsAddSigndsIsReached(builder, signdsIsReached): builder.PrependInt32Slot(6, signdsIsReached, 0)
def End(builder): return builder.EndObject()
def DSParamsEnd(builder):
    """This method is deprecated. Please switch to End."""
    return End(builder)
